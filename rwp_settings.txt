Scenario.name =v4_rwp_dd_spw_scenario_%%Group.movementModel%%_%%Group.router%%_nodes_%%Group.nrofHosts%%_%%Scenario.endTime%%
Scenario.simulateConnections = true
Scenario.updateInterval = 0.1
# 43200s == 12h
Scenario.endTime = 10800
#Scenario.endTime = 100

#################################################################################################

# "Bluetooth" interface for all nodes
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 250k
btInterface.transmitRange = 200

highspeedInterface.type = SimpleBroadcastInterface
highspeedInterface.transmitSpeed = 10M
highspeedInterface.transmitRange = 200

#################################################################################################
# Define 6 different node groups
Scenario.nrofHostGroups = 1


# Common settings for all groups
Group.movementModel = RandomWaypoint
Group.router = EpidemicRouter
Group.bufferSize = 5M
Group.waitTime = 0, 10
# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface
# Walking speeds
Group.speed = 1.0, 44.4
# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300

Group.nrofHosts = 4000

# group1 (pedestrians) specific settings
Group1.groupID = p

Group1.speed = 1.0, 44.4


#################################################################################################
## Message creation parameters 
# How many event generators
Events.nrof = 2
# Class of the first event generator
Events1.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 1,10
# Message sizes (500kB - 1MB)
Events1.size = 500k,1M
# range of message source/destination addresses
Events1.hosts = 0,1000
#Events1.tohosts = 2,3
# Message ID prefix
Events1.prefix = M

# Class of the first event generator
Events2.class = MessageEventGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events2.interval = 1,10
# Message sizes (500kB - 1MB)
Events2.size = 500k,1M
# range of message source/destination addresses
Events2.hosts = 0,1000
#Events1.tohosts = 2,3
# Message ID prefix
Events2.prefix = M




## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 24445,23584
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 1000


#################################################################################################

## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 6
# length of the warm up period (simulated seconds)
Report.warmup = 3600
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = MessageDeliveryReport
Report.report3 = ContactTimesReport
Report.report4 = AdjacencyGraphvizReport
Report.report5 = InterContactTimesReport
Report.report6 = MovementReport

## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 100
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 100
Optimization.randomizeUpdateOrder = true


#################################################################################################

## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
